{"ast":null,"code":"var _jsxFileName = \"/frontend/src/authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { LinearProgress } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Navigate, Route, useNavigate } from \"react-router\";\nimport { Box } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext(); // The Auth Provider will provide the online status of\n// the user whenever we try to access a private route\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8001/auth/verify\",\n      timeout: 2000\n    }).then(res => {\n      setIsLoading(false);\n      setCurrentUser(res.data.username);\n      localStorage.setItem(\"username\", res.data.username);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}; // PrivateRoute encloses all protected pages which need authentication\n\n_s(AuthProvider, \"/DmieS2Wf0Hikxz7Vq2rSsgaaJk=\");\n\n_c = AuthProvider;\nexport const PrivateRoute = _ref2 => {\n  _s2();\n\n  let {\n    children\n  } = _ref2;\n  const {\n    currentUser,\n    isLoading\n  } = useContext(AuthContext);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        marginTop: \"0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n  return currentUser ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: \"false\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 35\n  }, this);\n};\n\n_s2(PrivateRoute, \"saC1lCn7LpyUOyViMl62L3sWyeA=\");\n\n_c2 = PrivateRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"sources":["/frontend/src/authContext.js"],"names":["LinearProgress","axios","React","useEffect","useState","useContext","Navigate","Route","useNavigate","Box","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","isLoading","setIsLoading","method","url","timeout","then","res","data","username","localStorage","setItem","catch","err","console","log","PrivateRoute","width","marginTop"],"mappings":";;;;AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAA0BC,WAA1B,QAA6C,cAA7C;AACA,SAASC,GAAT,QAAoB,aAApB;;AAEA,OAAO,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAN,EAApB,C,CAEP;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdF,IAAAA,KAAK,CAAC;AACJiB,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,mCAFD;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAAD,CAAL,CAKGC,IALH,CAKSC,GAAD,IAAS;AACbL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,cAAc,CAACO,GAAG,CAACC,IAAJ,CAASC,QAAV,CAAd;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCJ,GAAG,CAACC,IAAJ,CAASC,QAA1C;AACD,KATH,EAUGG,KAVH,CAUUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;AAgBA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEd,MAAAA,WAAF;AAAeE,MAAAA;AAAf,KAA7B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBM,C,CA2BP;;GA3BaD,Y;;KAAAA,Y;AA4Bb,OAAO,MAAMmB,YAAY,GAAG,SAAkB;AAAA;;AAAA,MAAjB;AAAElB,IAAAA;AAAF,GAAiB;AAC5C,QAAM;AAAEC,IAAAA,WAAF;AAAeE,IAAAA;AAAf,MAA6BX,UAAU,CAACK,WAAD,CAA7C;;AAEA,MAAIM,SAAJ,EAAe;AACb,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEgB,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAT;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,SAAOnB,WAAW,GAAGD,QAAH,gBAAc,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAhC;AACD,CAZM;;IAAMkB,Y;;MAAAA,Y","sourcesContent":["import { LinearProgress } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Navigate, Route, useNavigate } from \"react-router\";\nimport { Box } from \"@mui/system\";\n\nexport const AuthContext = React.createContext();\n\n// The Auth Provider will provide the online status of\n// the user whenever we try to access a private route\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8001/auth/verify\",\n      timeout: 2000,\n    })\n      .then((res) => {\n        setIsLoading(false);\n        setCurrentUser(res.data.username);\n        localStorage.setItem(\"username\", res.data.username);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ currentUser, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// PrivateRoute encloses all protected pages which need authentication\nexport const PrivateRoute = ({ children }) => {\n  const { currentUser, isLoading } = useContext(AuthContext);\n\n  if (isLoading) {\n    return (\n      <Box sx={{ width: \"100%\", marginTop: \"0\" }}>\n        <LinearProgress />\n      </Box>\n    );\n  }\n\n  return currentUser ? children : <Navigate to=\"/login\" replace=\"false\" />;\n};\n"]},"metadata":{},"sourceType":"module"}