{"ast":null,"code":"var _jsxFileName = \"/frontend/src/features/editor/problemStatement.js\",\n    _s = $RefreshSig$();\n\nimport { Chip, Divider, Tab, Tabs } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProblemStatement() {\n  _s();\n\n  const {\n    problem_id,\n    lab_id\n  } = useParams();\n  const [state, setState] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [tabState, setTabState] = useState(0);\n  useEffect(async () => {\n    if (state) return;\n    const res = axios({\n      method: \"POST\",\n      url: \"http://localhost:1001/api/lab\",\n      data: {\n        type: \"problem/get\",\n        problem_id: problem_id,\n        lab_id: lab_id\n      },\n      withCredentials: true\n    });\n\n    if (res.data) {\n      setIsLoading(false);\n      setState(res.data);\n    } else {\n      console.log(\"Error fetching problem!\");\n    }\n  });\n\n  const handleTabChange = (event, newValue) => {\n    setTabState(newValue);\n  };\n\n  function allyProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`\n    };\n  } // if (isLoading) return <div>{/* Skeleton */}</div>;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-statement\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-name\",\n      children: \"state.name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-stats\",\n      children: \"state.stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-setters\",\n      children: state.problem_setter.map(setter => {\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: setter,\n          className: \"problem-setter-chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        borderBottom: 1,\n        borderColor: \"divider\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        value: tabState,\n        onChange: handleTabChange,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Problem\",\n          ...allyProps(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Solution\",\n          ...allyProps(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-statement\",\n      children: \"state.problem_statement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problem-tests\",\n      children: state.test_cases.map(test_case => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-test-no\",\n            children: \"Test #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-test-input\",\n            children: test_case.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-test-output\",\n            children: test_case.output\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProblemStatement, \"fHwK6M3SVB2wB9gDFyNiyaMEIlI=\", false, function () {\n  return [useParams];\n});\n\n_c = ProblemStatement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemStatement\");","map":{"version":3,"sources":["/frontend/src/features/editor/problemStatement.js"],"names":["Chip","Divider","Tab","Tabs","Box","axios","React","useEffect","useState","useParams","ProblemStatement","problem_id","lab_id","state","setState","isLoading","setIsLoading","tabState","setTabState","res","method","url","data","type","withCredentials","console","log","handleTabChange","event","newValue","allyProps","index","id","problem_setter","map","setter","borderBottom","borderColor","test_cases","test_case","input","output"],"mappings":"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","sourcesContent":["import { Chip, Divider, Tab, Tabs } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nexport default function ProblemStatement() {\n  const { problem_id, lab_id } = useParams();\n\n  const [state, setState] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [tabState, setTabState] = useState(0);\n\n  useEffect(async () => {\n    if (state) return;\n    const res = axios({\n      method: \"POST\",\n      url: \"http://localhost:1001/api/lab\",\n      data: {\n        type: \"problem/get\",\n        problem_id: problem_id,\n        lab_id: lab_id,\n      },\n      withCredentials: true,\n    });\n    if (res.data) {\n      setIsLoading(false);\n      setState(res.data);\n    } else {\n      console.log(\"Error fetching problem!\");\n    }\n  });\n\n  const handleTabChange = (event, newValue) => {\n    setTabState(newValue);\n  };\n\n  function allyProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  // if (isLoading) return <div>{/* Skeleton */}</div>;\n  return (\n    <div className=\"problem-statement\">\n      <div className=\"problem-name\">state.name</div>\n      <div className=\"problem-stats\">state.stats</div>\n      <div className=\"problem-setters\">\n        {state.problem_setter.map((setter) => {\n          return <Chip label={setter} className=\"problem-setter-chip\" />;\n        })}\n      </div>\n\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs value={tabState} onChange={handleTabChange}>\n          <Tab label=\"Problem\" {...allyProps(0)} />\n          <Tab label=\"Solution\" {...allyProps(1)} />\n        </Tabs>\n      </Box>\n\n      <div className=\"problem-statement\">state.problem_statement</div>\n      <Divider />\n      <div className=\"problem-tests\">\n        {state.test_cases.map((test_case) => {\n          return (\n            <>\n              <div className=\"problem-test-no\">Test #</div>\n              <div className=\"problem-test-input\">{test_case.input}</div>\n              <div className=\"problem-test-output\">{test_case.output}</div>\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}