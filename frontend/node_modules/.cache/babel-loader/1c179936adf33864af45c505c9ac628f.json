{"ast":null,"code":"var _jsxFileName = \"/frontend/src/features/labs/labs.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ax = axios.create({\n  baseURL: \"http://localhost:8001/api/\",\n  timeout: 3000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    username: localStorage.getItem(\"username\")\n  },\n  withCredentials: ttrue\n});\nexport default function Labs() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [num, setNum] = useState(10);\n  /*\n  useEffect(() => {\n    const numberOfLabs = async () => {\n      const num = await ax.post(\"/labs\", {\n        data: {\n          type: \"number\",\n        },\n      });\n    };\n     numberOfLabs();\n  });\n  */\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 500\n      },\n      children: /*#__PURE__*/_jsxDEV(TableBody, {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Labs, \"eLJj4Tb0opV9C1NMTmJI+Vt5IOs=\");\n\n_c = Labs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Labs\");","map":{"version":3,"sources":["/frontend/src/features/labs/labs.js"],"names":["Table","TableBody","TableCell","TableContainer","TablePagination","axios","useEffect","useState","ax","create","baseURL","timeout","headers","username","localStorage","getItem","withCredentials","ttrue","Labs","page","setPage","rowsPerPage","setRowsPerPage","num","setNum","minWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,EAAE,GAAGH,KAAK,CAACI,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,4BADa;AAEtBC,EAAAA,OAAO,EAAE,IAFa;AAGtBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAEPC,IAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFH,GAHa;AAOtBC,EAAAA,eAAe,EAAEC;AAPK,CAAb,CAAX;AAUA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,EAAE,EAAE;AAAEkB,QAAAA,QAAQ,EAAE;AAAZ,OAAX;AAAA,6BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAzBuBP,I;;KAAAA,I","sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst ax = axios.create({\n  baseURL: \"http://localhost:8001/api/\",\n  timeout: 3000,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    username: localStorage.getItem(\"username\"),\n  },\n  withCredentials: ttrue,\n});\n\nexport default function Labs() {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [num, setNum] = useState(10);\n  /*\n  useEffect(() => {\n    const numberOfLabs = async () => {\n      const num = await ax.post(\"/labs\", {\n        data: {\n          type: \"number\",\n        },\n      });\n    };\n\n    numberOfLabs();\n  });\n*/\n\n  return (\n    <TableContainer>\n      <Table sx={{ minWidth: 500 }}>\n        <TableBody>Hello</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}