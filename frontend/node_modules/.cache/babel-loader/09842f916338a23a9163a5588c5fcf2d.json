{"ast":null,"code":"var _jsxFileName = \"/frontend/src/features/editor/problemStatement.js\",\n    _s = $RefreshSig$();\n\nimport { Chip, Divider, Tab, Tabs } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProblemStatement(props) {\n  _s();\n\n  const problem_id = props.match.params.problem_id;\n  const lab_id = props.match.params.lab_id;\n  const [state, setState] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [tabState, setTabState] = useState(0);\n  useEffect(async () => {\n    const res = axios({\n      method: \"POST\",\n      url: \"http://localhost:1001/api/lab\",\n      data: {\n        type: \"problem/get\",\n        problem_id: problem_id,\n        lab_id: lab_id\n      }\n    });\n\n    if (res.data) {\n      setIsLoading(false);\n      setState(res.data);\n    } else {\n      console.log(\"Error fetching problem!\");\n    }\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 25\n  }, this);\n  return;\n  /*\n    return (\n      <div className=\"problem-statement\">\n        <div className=\"problem-name\">state.name</div>\n        <div className=\"problem-stats\">state.stats</div>\n        <div className=\"problem-setters\">\n          {state.problem_setter.map((setter) => {\n            return <Chip label={setter} className=\"problem-setter-chip\" />;\n          })}\n        </div>\n  \n        <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n          <Tabs onChange={() => setTabState(1 - tabState)}>\n            <Tab label=\"Problem\" />\n            <Tab label=\"Solution\" />\n          </Tabs>\n        </Box>\n  \n        <div className=\"problem-statement\">state.problem_statement</div>\n        <Divider />\n        <div className=\"problem-tests\">\n          {state.test_cases.map((test_case) => {\n            return (\n              <>\n                <div className=\"problem-test-no\">Test #</div>\n                <div className=\"problem-test-input\">{test_case.input}</div>\n                <div className=\"problem-test-output\">{test_case.output}</div>\n              </>\n            );\n          })}\n        </div>\n      </div>\n    );\n    */\n}\n\n_s(ProblemStatement, \"uvGYgnTdPcnnZhEGQbIaCVSc9uY=\");\n\n_c = ProblemStatement;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProblemStatement\");","map":{"version":3,"sources":["/frontend/src/features/editor/problemStatement.js"],"names":["Chip","Divider","Tab","Tabs","Box","axios","React","useEffect","useState","ProblemStatement","props","problem_id","match","params","lab_id","state","setState","isLoading","setIsLoading","tabState","setTabState","res","method","url","data","type","console","log"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAyC,eAAzC;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,QAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,UAAtC;AACA,QAAMG,MAAM,GAAGJ,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,MAAlC;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMc,GAAG,GAAGhB,KAAK,CAAC;AAChBiB,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,GAAG,EAAE,+BAFW;AAGhBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,aADF;AAEJd,QAAAA,UAAU,EAAEA,UAFR;AAGJG,QAAAA,MAAM,EAAEA;AAHJ;AAHU,KAAD,CAAjB;;AASA,QAAIO,GAAG,CAACG,IAAR,EAAc;AACZN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,QAAQ,CAACK,GAAG,CAACG,IAAL,CAAR;AACD,KAHD,MAGO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,GAhBQ,CAAT;AAkBA,MAAIV,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACf;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;GA/DuBR,gB;;KAAAA,gB;AA+DvB","sourcesContent":["import { Chip, Divider, Tab, Tabs } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nexport default function ProblemStatement(props) {\n  const problem_id = props.match.params.problem_id;\n  const lab_id = props.match.params.lab_id;\n\n  const [state, setState] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [tabState, setTabState] = useState(0);\n\n  useEffect(async () => {\n    const res = axios({\n      method: \"POST\",\n      url: \"http://localhost:1001/api/lab\",\n      data: {\n        type: \"problem/get\",\n        problem_id: problem_id,\n        lab_id: lab_id,\n      },\n    });\n    if (res.data) {\n      setIsLoading(false);\n      setState(res.data);\n    } else {\n      console.log(\"Error fetching problem!\");\n    }\n  });\n\n  if (isLoading) return <div>{/* Skeleton */}</div>;\n  return \n/*\n  return (\n    <div className=\"problem-statement\">\n      <div className=\"problem-name\">state.name</div>\n      <div className=\"problem-stats\">state.stats</div>\n      <div className=\"problem-setters\">\n        {state.problem_setter.map((setter) => {\n          return <Chip label={setter} className=\"problem-setter-chip\" />;\n        })}\n      </div>\n\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\n        <Tabs onChange={() => setTabState(1 - tabState)}>\n          <Tab label=\"Problem\" />\n          <Tab label=\"Solution\" />\n        </Tabs>\n      </Box>\n\n      <div className=\"problem-statement\">state.problem_statement</div>\n      <Divider />\n      <div className=\"problem-tests\">\n        {state.test_cases.map((test_case) => {\n          return (\n            <>\n              <div className=\"problem-test-no\">Test #</div>\n              <div className=\"problem-test-input\">{test_case.input}</div>\n              <div className=\"problem-test-output\">{test_case.output}</div>\n            </>\n          );\n        })}\n      </div>\n    </div>\n  );\n  */\n};\n"]},"metadata":{},"sourceType":"module"}