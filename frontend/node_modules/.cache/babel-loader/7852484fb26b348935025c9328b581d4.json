{"ast":null,"code":"var _jsxFileName = \"/frontend/src/authContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Box } from \"@mui/system\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Navigate } from \"react-router\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext(); // The Auth Provider will provide the online status of\n// the user whenever we try to access a private route\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const verifyLogin = async () => {\n      axios({\n        method: \"post\",\n        url: \"http://localhost:8001/auth/verify\",\n        timeout: 2000,\n        retries: 3\n      }).then(res => {\n        setIsLoading(false);\n        updateVerificationTimestamp(Date.now().getTime());\n        setCurrentUser(res.data.username);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      setIsLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}; // PrivateRoute encloses all protected pages which need authentication\n\n_s(AuthProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n\n_c = AuthProvider;\nexport const PrivateRoute = _ref2 => {\n  _s2();\n\n  let {\n    children\n  } = _ref2;\n  const {\n    isLoading\n  } = useContext(AuthContext);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        marginTop: \"0\"\n      },\n      children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } else return currentUser ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: \"true\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 37\n  }, this);\n};\n\n_s2(PrivateRoute, \"gkdbcd2DUeeydarxc2usMF2V7Cw=\");\n\n_c2 = PrivateRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AuthProvider\");\n$RefreshReg$(_c2, \"PrivateRoute\");","map":{"version":3,"sources":["/frontend/src/authContext.js"],"names":["axios","Box","LinearProgress","Navigate","React","useEffect","useState","useContext","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","verifyLogin","method","url","timeout","retries","then","res","setIsLoading","updateVerificationTimestamp","Date","now","getTime","data","username","catch","err","console","log","PrivateRoute","isLoading","width","marginTop"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB,C,CAEP;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,WAAW,GAAG,YAAY;AAC9Bd,MAAAA,KAAK,CAAC;AACJe,QAAAA,MAAM,EAAE,MADJ;AAEJC,QAAAA,GAAG,EAAE,mCAFD;AAGJC,QAAAA,OAAO,EAAE,IAHL;AAIJC,QAAAA,OAAO,EAAE;AAJL,OAAD,CAAL,CAMGC,IANH,CAMSC,GAAD,IAAS;AACbC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAC,QAAAA,2BAA2B,CAACC,IAAI,CAACC,GAAL,GAAWC,OAAX,EAAD,CAA3B;AACAZ,QAAAA,cAAc,CAACO,GAAG,CAACM,IAAJ,CAASC,QAAV,CAAd;AACD,OAVH,EAWGC,KAXH,CAWUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAbH;AAcD,KAfD;AAgBD,GAjBQ,EAiBN,CAACjB,WAAD,CAjBM,CAAT;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEA,MAAAA,WAAF;AAAeC,MAAAA,cAAf;AAA+BQ,MAAAA;AAA/B,KADT;AAAA,cAGGV;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7BM,C,CA+BP;;GA/BaD,Y;;KAAAA,Y;AAgCb,OAAO,MAAMsB,YAAY,GAAG,SAAkB;AAAA;;AAAA,MAAjB;AAAErB,IAAAA;AAAF,GAAiB;AAC5C,QAAM;AAAEsB,IAAAA;AAAF,MAAgB1B,UAAU,CAACC,WAAD,CAAhC;;AAEA,MAAIyB,SAAJ,EAAe;AACb,wBACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAT;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAOE,OAAOvB,WAAW,GAAGD,QAAH,gBAAc,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAhC;AACH,CAXM;;IAAMqB,Y;;MAAAA,Y","sourcesContent":["import axios from \"axios\";\nimport { Box } from \"@mui/system\";\nimport { LinearProgress } from \"@mui/material\";\nimport { Navigate } from \"react-router\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\nexport const AuthContext = React.createContext();\n\n// The Auth Provider will provide the online status of\n// the user whenever we try to access a private route\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    const verifyLogin = async () => {\n      axios({\n        method: \"post\",\n        url: \"http://localhost:8001/auth/verify\",\n        timeout: 2000,\n        retries: 3,\n      })\n        .then((res) => {\n          setIsLoading(false);\n          updateVerificationTimestamp(Date.now().getTime());\n          setCurrentUser(res.data.username);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n  }, [currentUser]);\n\n  return (\n    <AuthContext.Provider\n      value={{ currentUser, setCurrentUser, setIsLoading }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// PrivateRoute encloses all protected pages which need authentication\nexport const PrivateRoute = ({ children }) => {\n  const { isLoading } = useContext(AuthContext);\n\n  if (isLoading) {\n    return (\n      <Box sx={{ width: \"100%\", marginTop: \"0\" }}>\n        <LinearProgress />\n      </Box>\n    );\n  } else\n    return currentUser ? children : <Navigate to=\"/login\" replace=\"true\" />;\n};\n"]},"metadata":{},"sourceType":"module"}